<!--<Window x:Class="PL.Call.ClosedCallsList"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Call"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        Closed="Window_Closed"
        Title="ClosedCallsList" Height="450" Width="500"
        Icon="../icon.ico"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="8*"/>
        </Grid.RowDefinitions>

        <Label Content="Sort by Field:" Margin="164,8,215,46"/>
        --><!--<ComboBox Width="150" Height="30" Margin="290,4,60,53"
                  ItemsSource="{Binding Source={StaticResource CallFieldsCollectionKey}}"
                  SelectedValue="{Binding CallFieldsFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />--><!--
        <ComboBox SelectedValue="{Binding Path=CallFieldsFilter, Mode=TwoWay}" 
            ItemsSource="{Binding Source={StaticResource CallFieldsCollectionKey}}" 
            SelectionChanged="comboBoxCallList_SelectionChanged" 
            Width="150" Margin="194,2,46,40" Background="White" BorderBrush="#CCCCCC" Height="30" Grid.Column="1" RenderTransformOrigin="0.747,0.351"/>

        <Label Content="Filter by Call Type:" Margin="164,46,215,347" Grid.RowSpan="2"/>
        --><!--<ComboBox Width="150" Height="30" Margin="290,53,60,4"
                  ItemsSource="{Binding Source={StaticResource TypeOfCallCollectionKey}}"
                  SelectedValue="{Binding SelectedTypeOfCallFilter, Mode=TwoWay}" />--><!--
        <ComboBox SelectedValue="{Binding SelectedTypeOfCallFilter, Mode=TwoWay}" 
                  ItemsSource="{Binding Source={StaticResource TypeOfCallCollectionKey}}" 
                  SelectionChanged="comboBoxCallList_SelectionChanged" 
                  Width="150" Background="White" BorderBrush="#CCCCCC" Height="30" Grid.Column="1" Margin="194,40,46,2"/>

        <DataGrid Grid.Row="1" Margin="5,10,5,0"
                  ItemsSource="{Binding Path=ClosedCallList, Mode=TwoWay}"
                  AutoGenerateColumns="False" IsReadOnly="True">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding TypeOfCall}" Header="Type Of Call" Width="*"/>
                <DataGridTextColumn Binding="{Binding Address}" Header="Address" Width="*"/>
                <DataGridTextColumn Binding="{Binding OpeningTime}" Header="Opening Time" Width="*"/>
                <DataGridTextColumn Binding="{Binding ActualTreatmentEndTime}" Header="Treatment End Time" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>-->
<Window x:Class="PL.Call.ClosedCallsList"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Call"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        Closed="Window_Closed"
        Title="We Save Lives - Closed Calls" Height="700" Width="1200"
        Icon="../icon.ico"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        WindowStartupLocation="CenterScreen">

    <Window.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#F8F9FA" Offset="0"/>
            <GradientStop Color="#E9ECEF" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>

    <Window.Resources>
        <!-- Header Style -->
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#DC3545"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,10,0,20"/>
        </Style>

        <!-- Filter Label Style -->
        <Style x:Key="FilterLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
        </Style>

        <!-- Filter ComboBox Style -->
        <Style x:Key="FilterComboBoxStyle" TargetType="ComboBox">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton" 
                                              BorderBrush="Transparent" 
                                              Background="Transparent" 
                                              Grid.Column="2"
                                              Focusable="false"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Background="Transparent">
                                                <Path x:Name="Arrow" 
                                                      Data="M 0 0 L 4 4 L 8 0 Z" 
                                                      Fill="#495057" 
                                                      HorizontalAlignment="Right" 
                                                      VerticalAlignment="Center" 
                                                      Margin="0,0,10,0"/>
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite" 
                                                  IsHitTestVisible="False" 
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                <TextBox x:Name="PART_EditableTextBox" 
                                         Style="{x:Null}"
                                         Background="Transparent" 
                                         BorderThickness="0" 
                                         Focusable="True" 
                                         Visibility="Hidden"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup Name="Popup" 
                                       Placement="Bottom" 
                                       IsOpen="{TemplateBinding IsDropDownOpen}" 
                                       AllowsTransparency="True" 
                                       Focusable="False" 
                                       PopupAnimation="Slide">
                                    <Grid Name="DropDown" 
                                          SnapsToDevicePixels="True" 
                                          MinWidth="{TemplateBinding ActualWidth}" 
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" 
                                                Background="White" 
                                                BorderThickness="1" 
                                                BorderBrush="#CED4DA"
                                                CornerRadius="6">
                                            <ScrollViewer Margin="4,6,4,6" 
                                                          SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True" 
                                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#DC3545"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#DC3545"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Card Style -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#E9ECEF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="30"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#000000" BlurRadius="15" ShadowDepth="5" Opacity="0.1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Style -->
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#E9ECEF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternatingRowBackground" Value="#F8F9FA"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#E9ECEF"/>
            <Setter Property="VerticalGridLinesBrush" Value="#E9ECEF"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
        </Style>

        <!-- DataGrid Header Style -->
        <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#F8F9FA"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="BorderBrush" Value="#E9ECEF"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,0"/>
        </Style>

        <!-- DataGrid Row Style -->
        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="13"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E9ECEF"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#DC3545"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid Cell Style -->
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <!-- Main Content Card -->
        <Border Style="{StaticResource CardStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Header -->
                <TextBlock Grid.Row="0" 
                           Text="Closed Calls Details" 
                           Style="{StaticResource HeaderStyle}"/>

                <!-- Controls Panel -->
                <Grid Grid.Row="1" Margin="0,0,0,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Sort Controls -->
                    <StackPanel Grid.Column="0" 
                                Orientation="Horizontal" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center">
                        <Label Content="Sort by Field:" 
                               Style="{StaticResource FilterLabelStyle}"/>
                        <ComboBox SelectedValue="{Binding Path=CallFieldsFilter, Mode=TwoWay}" 
                                  ItemsSource="{Binding Source={StaticResource CallFieldsCollectionKey}}" 
                                  SelectionChanged="comboBoxCallList_SelectionChanged" 
                                  Style="{StaticResource FilterComboBoxStyle}"
                                  Width="150"/>
                    </StackPanel>

                    <!-- Filter Controls -->
                    <StackPanel Grid.Column="1" 
                                Orientation="Horizontal" 
                                HorizontalAlignment="Right" 
                                VerticalAlignment="Center">
                        <Label Content="Filter by Call Type:" 
                               Style="{StaticResource FilterLabelStyle}"/>
                        <ComboBox SelectedValue="{Binding SelectedTypeOfCallFilter, Mode=TwoWay}" 
                                  ItemsSource="{Binding Source={StaticResource TypeOfCallCollectionKey}}" 
                                  SelectionChanged="comboBoxCallList_SelectionChanged" 
                                  Style="{StaticResource FilterComboBoxStyle}"
                                  Width="150"/>
                    </StackPanel>
                </Grid>

                <!-- DataGrid -->
                <DataGrid Grid.Row="2"
                          ItemsSource="{Binding Path=ClosedCallList, Mode=TwoWay}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          Style="{StaticResource DataGridStyle}"
                          ColumnHeaderStyle="{StaticResource DataGridHeaderStyle}"
                          RowStyle="{StaticResource DataGridRowStyle}"
                          CellStyle="{StaticResource DataGridCellStyle}">
                    <DataGrid.Columns>
                        <!-- Type Of Call -->
                        <DataGridTextColumn Binding="{Binding TypeOfCall}" 
                                            Header="Type Of Call" 
                                            Width="*"/>

                        <!-- Address -->
                        <DataGridTextColumn Binding="{Binding Address}" 
                                            Header="Address" 
                                            Width="*"/>

                        <!-- Opening Time -->
                        <DataGridTextColumn Binding="{Binding OpeningTime}" 
                                            Header="Opening Time" 
                                            Width="*"/>

                        <!-- Treatment End Time -->
                        <DataGridTextColumn Binding="{Binding ActualTreatmentEndTime}" 
                                            Header="Treatment End Time" 
                                            Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Border>
    </Grid>
</Window>
