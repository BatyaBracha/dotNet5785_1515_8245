<!--<Window x:Class="PL.Call.CallWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        Closed="Window_Closed"
        xmlns:local="clr-namespace:PL.Call"
        xmlns:enum="clr-namespace:PL"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="CallWindow" Height="550" Width="430"
        Icon="../icon.ico"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">
    <Window.Resources>
        <local:ConvertUpdateToTrue x:Key="ConvertUpdateToTrueKey"/>
        <local:ConvertUpdateToVisible x:Key="ConvertUpdateToVisibleKey"/>
        <enum:CallStatusCollection x:Key="CallStatusCollectionKey"/>

        <Style x:Key="GridLabelStyle" TargetType="Label">
            <Setter Property="Foreground" Value="#2E3A59"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="2"/>
        </Style>
        <Style x:Key="GridListBoxStyle" TargetType="ListBox">
            <Setter Property="Foreground" Value="#2E3A59"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Background" Value="#F7F9FC"/>
            <Setter Property="BorderBrush" Value="Blue"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="4,2"/>
        </Style>
        <Style x:Key="GridTextBoxStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="#2E3A59"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Background" Value="#F7F9FC"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="6,2"/>
        </Style>

        <Style x:Key="GridComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Foreground" Value="#2E3A59"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Background" Value="#F7F9FC"/>
            <Setter Property="BorderBrush" Value="Green"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="4,2"/>
        </Style>
    </Window.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid RenderTransformOrigin="0.877,-0.411">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="161"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            --><!-- Id --><!--
            <Label Grid.Row="0" Grid.Column="0" Content="Id:" Style="{StaticResource GridLabelStyle}" />
            <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource GridTextBoxStyle}" Text="{Binding CurrentCall.Id}" IsReadOnly="True"/>

            --><!-- TypeOfCall --><!--
            <Label Grid.Row="1" Grid.Column="0" Content="Type of Call:" Style="{StaticResource GridLabelStyle}" />
            <ComboBox Grid.Row="1" Grid.Column="1" Style="{StaticResource GridComboBoxStyle}" SelectedValue="{Binding CurrentCall.TypeOfCall}" ItemsSource="{Binding Source={StaticResource TypeOfCallCollectionKey}}"/>

            --><!-- Description --><!--
            <Label Grid.Row="2" Grid.Column="0" Content="Description:" Style="{StaticResource GridLabelStyle}" />
            <TextBox Grid.Row="2" Grid.Column="1" Style="{StaticResource GridTextBoxStyle}" Text="{Binding CurrentCall.Description}"/>

            --><!-- Address --><!--
            <Label Grid.Row="3" Grid.Column="0" Content="Address:" Style="{StaticResource GridLabelStyle}" />
            <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding CurrentCall.Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            --><!-- DataTrigger to check if Latitude or Longitude is null --><!--
                            <DataTrigger Binding="{Binding CurrentCall.Latitude}" Value="{x:Null}">
                                <Setter Property="Background" Value="Red" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentCall.Longitude}" Value="{x:Null}">
                                <Setter Property="Background" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            --><!-- OpeningTime --><!--
            <Label Grid.Row="6" Grid.Column="0" Content="Opening Time:" Style="{StaticResource GridLabelStyle}" />
            <TextBox Grid.Row="6" Grid.Column="1" Style="{StaticResource GridTextBoxStyle}" Text="{Binding CurrentCall.OpeningTime}" IsReadOnly="True"/>

            --><!-- MaxClosingTime --><!--
            <Label Grid.Row="7" Grid.Column="0" Content="Max Closing Time:" Style="{StaticResource GridLabelStyle}" />
            <TextBox Grid.Row="7" Grid.Column="1" Style="{StaticResource GridTextBoxStyle}" Text="{Binding CurrentCall.MaxClosingTime}"/>

            --><!-- Status --><!--
            <Label Grid.Row="8" Grid.Column="0" Content="Status:" Style="{StaticResource GridLabelStyle}" />
            <ComboBox Grid.Row="8" Grid.Column="1" Style="{StaticResource GridComboBoxStyle}" SelectedValue="{Binding CurrentCall.Status}" ItemsSource="{Binding Source={StaticResource CallStatusCollectionKey}}" IsReadOnly="True"/>


            <Label Grid.Row="9" Grid.Column="0" Content="Assigned Volunteers:" Style="{StaticResource GridLabelStyle}" Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}"/>
            <ListBox Grid.Row="9" Grid.Column="1" Style="{StaticResource GridListBoxStyle}"
            ItemsSource="{Binding CurrentCall.AssignedVolunteers}"
            DisplayMemberPath="Name" Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}" Margin="12,7,0,6" />

            <Button Grid.Row="10" Grid.Column="1" Content="{Binding ButtonText}" Click="btnAddUpdate_Click" Margin="40,51,131,-52" />


        </Grid>
    </ScrollViewer>
</Window>-->
<Window x:Class="PL.Call.CallWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        Closed="Window_Closed"
        xmlns:local="clr-namespace:PL.Call"
        xmlns:enum="clr-namespace:PL"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="Call Management" Height="700" Width="500"
        Icon="../icon.ico"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        WindowStartupLocation="CenterScreen">

    <Window.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#F8F9FA" Offset="0"/>
            <GradientStop Color="#E9ECEF" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>

    <Window.Resources>
        <local:ConvertUpdateToTrue x:Key="ConvertUpdateToTrueKey"/>
        <local:ConvertUpdateToVisible x:Key="ConvertUpdateToVisibleKey"/>
        <enum:CallStatusCollection x:Key="CallStatusCollectionKey"/>

        <!-- Header Style -->
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#DC3545"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,20,0,30"/>
        </Style>

        <!-- Card Style -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#E9ECEF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="30"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#000000" BlurRadius="15" ShadowDepth="5" Opacity="0.1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Input Label Style -->
        <Style x:Key="InputLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="Margin" Value="0,10,0,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!-- Input TextBox Style -->
        <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#DC3545"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Background" Value="#F8F9FA"/>
                                <Setter Property="Foreground" Value="#6C757D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Input ComboBox Style -->
        <Style x:Key="InputComboBoxStyle" TargetType="ComboBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border Name="Border" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="6">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- תוכן ComboBox -->
                                    <ContentPresenter Grid.Column="0"
                                                      Name="ContentSite" 
                                                      IsHitTestVisible="False" 
                                                      Content="{TemplateBinding SelectionBoxItem}" 
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                                      Margin="12,0,0,0" 
                                                      VerticalAlignment="Center" 
                                                      HorizontalAlignment="Left"/>

                                    <!-- כפתור הפתיחה -->
                                    <ToggleButton Grid.Column="0" 
                                                  Grid.ColumnSpan="2"
                                                  Name="ToggleButton" 
                                                  Background="Transparent" 
                                                  BorderThickness="0" 
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"
                                                  Focusable="False">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Background="Transparent">
                                                    <Path Grid.Column="1"
                                                          Name="Arrow" 
                                                          Fill="#495057" 
                                                          HorizontalAlignment="Right" 
                                                          VerticalAlignment="Center" 
                                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                                          Margin="0,0,10,0"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>
                            </Border>

                            <!-- Popup עבור הרשימה -->
                            <Popup Name="Popup" 
                                   Placement="Bottom" 
                                   IsOpen="{TemplateBinding IsDropDownOpen}" 
                                   AllowsTransparency="True" 
                                   Focusable="False" 
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown" 
                                      SnapsToDevicePixels="True" 
                                      MinWidth="{TemplateBinding ActualWidth}" 
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" 
                                            Background="White" 
                                            BorderThickness="1" 
                                            BorderBrush="#CED4DA"
                                            CornerRadius="6"
                                            Margin="0,1,0,0">
                                        <ScrollViewer Margin="4,6,4,6" 
                                                      SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" 
                                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#DC3545"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#DC3545"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#F8F9FA"/>
                                <Setter Property="Foreground" Value="#6C757D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Input ListBox Style -->
        <Style x:Key="InputListBoxStyle" TargetType="ListBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="MinHeight" Value="100"/>
            <Setter Property="MaxHeight" Value="150"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer Focusable="false" 
                                          HorizontalScrollBarVisibility="Auto" 
                                          VerticalScrollBarVisibility="Auto">
                                <StackPanel Margin="2" 
                                            IsItemsHost="True"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Primary Button Style -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="#DC3545"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0,20,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="6" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#C82333"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#A71E2A"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Address TextBox with Special Style -->
        <Style x:Key="AddressTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource InputTextBoxStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentCall.Latitude}" Value="{x:Null}">
                    <Setter Property="Background" Value="#FFE6E6"/>
                    <Setter Property="BorderBrush" Value="#FF4444"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentCall.Longitude}" Value="{x:Null}">
                    <Setter Property="Background" Value="#FFE6E6"/>
                    <Setter Property="BorderBrush" Value="#FF4444"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!-- Main Content Card -->
            <Border Style="{StaticResource CardStyle}" Margin="20,10,20,20">
                <StackPanel>
                    <TextBlock Grid.Row="0" Text="Call Management" Style="{StaticResource HeaderStyle}"/>

                    <!-- Id -->
                    <Label Content="ID" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentCall.Id}" 
                             Style="{StaticResource InputTextBoxStyle}" 
                             IsReadOnly="True"/>

                    <!-- TypeOfCall -->
                    <Label Content="Type of Call" Style="{StaticResource InputLabelStyle}"/>
                    <ComboBox SelectedValue="{Binding CurrentCall.TypeOfCall}" 
                              ItemsSource="{Binding Source={StaticResource TypeOfCallCollectionKey}}" 
                              Style="{StaticResource InputComboBoxStyle}"/>

                    <!-- Description -->
                    <Label Content="Description" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentCall.Description}" 
                             Style="{StaticResource InputTextBoxStyle}"/>

                    <!-- Address -->
                    <Label Content="Address" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentCall.Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             Style="{StaticResource AddressTextBoxStyle}"/>

                    <!-- Opening Time -->
                    <Label Content="Opening Time" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentCall.OpeningTime}" 
                             Style="{StaticResource InputTextBoxStyle}" 
                             IsReadOnly="True"/>

                    <!-- Max Closing Time -->
                    <Label Content="Max Closing Time" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentCall.MaxClosingTime}" 
                             Style="{StaticResource InputTextBoxStyle}"/>

                    <!-- Status -->
                    <Label Content="Status" Style="{StaticResource InputLabelStyle}"/>
                    <ComboBox SelectedValue="{Binding CurrentCall.Status}" 
                              ItemsSource="{Binding Source={StaticResource CallStatusCollectionKey}}" 
                              Style="{StaticResource InputComboBoxStyle}" 
                              IsReadOnly="True"/>

                    <!-- Assigned Volunteers (Only in Update Mode) -->
                    <StackPanel Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                        <Label Content="Assigned Volunteers" Style="{StaticResource InputLabelStyle}"/>
                        <ListBox ItemsSource="{Binding CurrentCall.AssignedVolunteers}"
                                 DisplayMemberPath="Name" 
                                 Style="{StaticResource InputListBoxStyle}"/>
                    </StackPanel>

                    <!-- Action Button -->
                    <Button Content="{Binding ButtonText}" 
                            Click="btnAddUpdate_Click" 
                            Style="{StaticResource PrimaryButtonStyle}"/>

                </StackPanel>
            </Border>
        </Grid>
    </ScrollViewer>
</Window>
