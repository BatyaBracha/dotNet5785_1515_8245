<Window x:Class="PL.Volunteer.VolunteerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Volunteer"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        Closed="Window_Closed"
        Title="Volunteer Management" Height="600" Width="500"
        Icon="../icon.ico"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        WindowStartupLocation="CenterScreen">

    <Window.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#F8F9FA" Offset="0"/>
            <GradientStop Color="#E9ECEF" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>

    <Window.Resources>
        <local:ConvertUpdateToTrue x:Key="ConvertUpdateToTrueKey"/>
        <local:ConvertUpdateToVisible x:Key="ConvertUpdateToVisibleKey"/>

        <!-- Header Style -->
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#DC3545"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,20,0,30"/>
        </Style>

        <!-- Card Style -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#E9ECEF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="30"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#000000" BlurRadius="15" ShadowDepth="5" Opacity="0.1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Input Label Style -->
        <Style x:Key="InputLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="Margin" Value="0,10,0,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!-- Input TextBox Style -->
        <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#DC3545"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Background" Value="#F8F9FA"/>
                                <Setter Property="Foreground" Value="#6C757D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Input PasswordBox Style -->
        <Style x:Key="InputPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#DC3545"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Input ComboBox Style - גרסה מתוקנת -->
        <Style x:Key="InputComboBoxStyle" TargetType="ComboBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CED4DA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- תוכן ComboBox -->
                                    <ContentPresenter Grid.Column="0"
                                              Name="ContentSite" 
                                              IsHitTestVisible="False" 
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                              Margin="12,0,0,0" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"/>

                                    <!-- כפתור הפתיחה -->
                                    <ToggleButton Grid.Column="0" 
                                          Grid.ColumnSpan="2"
                                          Name="ToggleButton" 
                                          Background="Transparent" 
                                          BorderThickness="0" 
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          Focusable="False">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Background="Transparent">
                                                    <Path Grid.Column="1"
                                                  Name="Arrow" 
                                                  Fill="#495057" 
                                                  HorizontalAlignment="Right" 
                                                  VerticalAlignment="Center" 
                                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                                  Margin="0,0,10,0"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>
                            </Border>

                            <!-- Popup עבור הרשימה -->
                            <Popup Name="Popup" 
                           Placement="Bottom" 
                           IsOpen="{TemplateBinding IsDropDownOpen}" 
                           AllowsTransparency="True" 
                           Focusable="False" 
                           PopupAnimation="Slide">
                                <Grid Name="DropDown" 
                              SnapsToDevicePixels="True" 
                              MinWidth="{TemplateBinding ActualWidth}" 
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" 
                                    Background="White" 
                                    BorderThickness="1" 
                                    BorderBrush="#CED4DA"
                                    CornerRadius="6"
                                    Margin="0,1,0,0">
                                        <ScrollViewer Margin="4,6,4,6" 
                                              SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" 
                                                KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#DC3545"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#DC3545"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- CheckBox Style -->
        <Style x:Key="InputCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#495057"/>
            <Setter Property="Margin" Value="0,10,0,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!-- Primary Button Style -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="#DC3545"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0,20,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="6" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#C82333"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#A71E2A"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Address TextBox with Special Style -->
        <Style x:Key="AddressTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource InputTextBoxStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentVolunteer.latitude}" Value="{x:Null}">
                    <Setter Property="Background" Value="#FFE6E6"/>
                    <Setter Property="BorderBrush" Value="#FF4444"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentVolunteer.longitude}" Value="{x:Null}">
                    <Setter Property="Background" Value="#FFE6E6"/>
                    <Setter Property="BorderBrush" Value="#FF4444"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
        <Grid>
            <Grid.RowDefinitions>
                <!--<RowDefinition Height="Auto" MinHeight="87.243"/>-->
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!-- Header -->

            <!-- Main Content Card -->
            <Border Style="{StaticResource CardStyle}" Margin="20,10,20,117">
                <StackPanel>
                    <TextBlock Grid.Row="0" Text="Volunteer Management" Style="{StaticResource HeaderStyle}" Margin="0,20,0,30" Width="311"/>

                    <!-- Id -->
                    <Label Content="ID" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentVolunteer.Id}" 
                             Style="{StaticResource InputTextBoxStyle}"
                             IsReadOnly="{Binding ButtonText, Converter={StaticResource ConvertUpdateToTrueKey}}"/>

                    <!-- Name -->
                    <Label Content="Name" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentVolunteer.Name}" 
                             Style="{StaticResource InputTextBoxStyle}"/>

                    <!-- Phone Number -->
                    <Label Content="Phone Number" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentVolunteer.PhoneNumber}" 
                             Style="{StaticResource InputTextBoxStyle}"/>

                    <!-- Email -->
                    <Label Content="Email" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentVolunteer.Email}" 
                             Style="{StaticResource InputTextBoxStyle}"/>

                    <!-- Password -->
                    <Label Content="Password" Style="{StaticResource InputLabelStyle}"/>
                    <PasswordBox Style="{StaticResource InputPasswordBoxStyle}" 
                                 PasswordChanged="PasswordBox_PasswordChanged"/>

                    <!-- Address -->
                    <Label Content="Address" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentVolunteer.CurrentAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource AddressTextBoxStyle}"/>

                    <!-- Role -->
                    <Label Content="Role" Style="{StaticResource InputLabelStyle}"/>
                    <ComboBox SelectedValue="{Binding Path=CurrentVolunteer.Role, Mode=TwoWay}" 
                              ItemsSource="{Binding Source={StaticResource RoleCollectionKey}}"
                              Style="{StaticResource InputComboBoxStyle}"/>

                    <!-- Active -->
                    <CheckBox Content="Active" 
                              IsChecked="{Binding CurrentVolunteer.Active}" 
                              Style="{StaticResource InputCheckBoxStyle}"/>

                    <!-- Max Distance -->
                    <Label Content="Max Distance" Style="{StaticResource InputLabelStyle}"/>
                    <TextBox Text="{Binding CurrentVolunteer.MaxDistance}" 
                             Style="{StaticResource InputTextBoxStyle}"/>

                    <!-- Type of Distance -->
                    <Label Content="Type of Distance" Style="{StaticResource InputLabelStyle}"/>
                    <ComboBox SelectedValue="{Binding Path=CurrentVolunteer.TypeOfDistance, Mode=TwoWay}" 
                              ItemsSource="{Binding Source={StaticResource TypeOfDistanceCollectionKey}}"
                              Style="{StaticResource InputComboBoxStyle}"/>

                    <!-- Statistics Section (Only in Update Mode) -->
                    <Border BorderBrush="#E9ECEF" 
                            BorderThickness="1" 
                            CornerRadius="6" 
                            Padding="15" 
                            Margin="0,15,0,0"
                            Background="#F8F9FA"
                            Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.ColumnSpan="2" 
                                       Text="Statistics" 
                                       FontSize="16" 
                                       FontWeight="SemiBold" 
                                       Foreground="#495057" 
                                       Margin="0,0,0,10"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Calls Done:" Style="{StaticResource InputLabelStyle}"/>
                            <TextBox Grid.Row="1" Grid.Column="1" 
                                     Text="{Binding CurrentVolunteer.CallsDone}" 
                                     Style="{StaticResource InputTextBoxStyle}" 
                                     IsReadOnly="True"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Calls Canceled:" Style="{StaticResource InputLabelStyle}"/>
                            <TextBox Grid.Row="2" Grid.Column="1" 
                                     Text="{Binding CurrentVolunteer.CallsCanceled}" 
                                     Style="{StaticResource InputTextBoxStyle}" 
                                     IsReadOnly="True"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="Calls Out of Date:" Style="{StaticResource InputLabelStyle}"/>
                            <TextBox Grid.Row="3" Grid.Column="1" 
                                     Text="{Binding CurrentVolunteer.CallsOutOfdate}" 
                                     Style="{StaticResource InputTextBoxStyle}" 
                                     IsReadOnly="True"/>
                        </Grid>
                    </Border>

                    <!-- Call In Progress (Only in Update Mode) -->
                    <StackPanel Visibility="{Binding ButtonText, Converter={StaticResource ConvertUpdateToVisibleKey}}">
                        <Label Content="Call In Progress" Style="{StaticResource InputLabelStyle}"/>
                        <TextBox Text="{Binding CurrentVolunteer.CallInProgress}" 
                                 Style="{StaticResource InputTextBoxStyle}" 
                                 IsReadOnly="True"/>
                    </StackPanel>

                    <!-- Action Button -->
                    <Button Content="{Binding ButtonText}" 
                            Click="btnAddUpdate_Click" 
                            Style="{StaticResource PrimaryButtonStyle}"/>

                </StackPanel>
            </Border>
        </Grid>
    </ScrollViewer>
</Window>